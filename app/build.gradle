apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.centricular.salvini"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets.main {
        jni.srcDirs = []
        jniLibs.srcDir 'src/main/libs'
    }

    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
        def ndkDir = android.ndkDirectory
        def GST_PLUGIN_VERSION = android.defaultConfig.versionCode
        environment GSTREAMER_SDK_ROOT_ANDROID: System.getenv('GSTREAMER_SDK_ROOT_ANDROID')
        commandLine "$ndkDir/ndk-build",
                '-C', file('src/main').absolutePath,
                '-j', Runtime.runtime.availableProcessors(),
                'all',
                'NDK_DEBUG=1', 'APP_PLATFORM=android-19',
                'GST_PLUGIN_VERSION=\\\"' + GST_PLUGIN_VERSION + '\\\"'
    }

    task cleanNative(type: Exec, description: 'Clean JNI object files') {
        def ndkDir = android.ndkDirectory
        environment GSTREAMER_SDK_ROOT_ANDROID: "/home/jan/cerbero/dist/android_armv7"
        commandLine "$ndkDir/ndk-build",
                '-C', file('src/main').absolutePath,
                'clean'
    }

    clean.dependsOn 'cleanNative'

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn buildNative
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:percent:23.1.1'
}
